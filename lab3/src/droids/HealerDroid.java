package droids;

import core.ConsoleColors;

public class HealerDroid extends Droid {
    private static final int HEAL_BONUS = 30;
    private static final int ENERGY_COST = 30;

    public HealerDroid(String name) {
        super(name, 90, 5);
    }

    // ‚úÖ –î–û–î–ê–ù–û: –ú–µ—Ç–æ–¥ –¥–ª—è –ª—ñ–∫—É–≤–∞–Ω–Ω—è —Å–æ—é–∑–Ω–∏–∫–∞
    public boolean healAlly(Droid target) {
        if (consumeEnergy(ENERGY_COST)) {
            int healAmount = HEAL_BONUS;
            target.setHealth(Math.min(target.getMaxHealth(), target.getHealth() + healAmount));
            System.out.println(ConsoleColors.BOLD + ConsoleColors.GREEN +
                    "üíö –ü–û–°–ò–õ–ï–ù–ï –õ–Ü–ö–£–í–ê–ù–ù–Ø! " + this.getName() + " –≤—ñ–¥–Ω–æ–≤–ª—é—î " + healAmount + " HP –¥–ª—è " + target.getName() + ConsoleColors.RESET);
            return true;
        } else {
            System.out.println(ConsoleColors.YELLOW + this.getName() +
                    " –Ω–µ –≤–∏—Å—Ç–∞—á–∏–ª–æ –µ–Ω–µ—Ä–≥—ñ—ó –¥–ª—è –ø–æ—Å–∏–ª–µ–Ω–æ–≥–æ –ª—ñ–∫—É–≤–∞–Ω–Ω—è. " + ConsoleColors.RESET);
            return false;
        }
    }

    // ‚úÖ –î–û–î–ê–ù–û: –ú–µ—Ç–æ–¥ –¥–ª—è —Å–∞–º–æ–ª—ñ–∫—É–≤–∞–Ω–Ω—è
    public boolean healSelf() {
        if (consumeEnergy(ENERGY_COST / 2)) { // –°–∞–º–æ–ª—ñ–∫—É–≤–∞–Ω–Ω—è –∫–æ—à—Ç—É—î –º–µ–Ω—à–µ
            int healAmount = HEAL_BONUS / 2;
            this.setHealth(Math.min(this.getMaxHealth(), this.getHealth() + healAmount));
            System.out.println(ConsoleColors.BOLD + ConsoleColors.GREEN +
                    "üíö –°–ê–ú–û–õ–Ü–ö–£–í–ê–ù–ù–Ø! " + this.getName() + " –≤—ñ–¥–Ω–æ–≤–ª—é—î " + healAmount + " HP." + ConsoleColors.RESET);
            return true;
        } else {
            System.out.println(ConsoleColors.YELLOW + this.getName() +
                    " –Ω–µ –≤–∏—Å—Ç–∞—á–∏–ª–æ –µ–Ω–µ—Ä–≥—ñ—ó –¥–ª—è —Å–∞–º–æ–ª—ñ–∫—É–≤–∞–Ω–Ω—è. " + ConsoleColors.RESET);
            return false;
        }
    }

    @Override
    public void attack(Droid defender) {
        System.out.println(this.getName() + " –∑–∞–≤–¥–∞—î –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ—ó —à–∫–æ–¥–∏.");
        super.attack(defender);
    }
}