package core;

import droids.Droid;
import droids.TankDroid;
import droids.AttackerDroid;
import droids.HealerDroid;

import battles.Fight1v1Manager;
import battles.FightTeamVsTeamManager;
import battles.BattleHistoryManager;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class GameManager {
    private static final List<Droid> droidList = new ArrayList<>();
    public static final Scanner scanner = new Scanner(System.in);

    private static List<Droid> lastTeam1 = new ArrayList<>();
    private static List<Droid> lastTeam2 = new ArrayList<>();

    public static void main(String[] args) {
        int choice;
        do {
            showMenu();
            if (scanner.hasNextInt()) {
                choice = scanner.nextInt();
                scanner.nextLine();
            } else {
                System.out.println("–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ.");
                scanner.nextLine();
                choice = 0;
                continue;
            }
            executeChoice(choice);
        } while (choice != 7);
    }

    private static void showMenu() {
        System.out.println("\n--- –ú–ï–ù–Æ –ì–†–ò –ë–ò–¢–í–ê –î–†–û–á–î–Ü–í ---");
        System.out.println("1. –°—Ç–≤–æ—Ä–∏—Ç–∏ –¥—Ä–æ—ó–¥–∞ (–æ–±—Ä–∞–Ω–æ–≥–æ –≤–∏–¥—É)");
        System.out.println("2. –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö –¥—Ä–æ—ó–¥—ñ–≤");
        System.out.println("3. –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±—ñ–π 1 –Ω–∞ 1");
        System.out.println("4. –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±—ñ–π –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É");
        System.out.println("5. –ó–±–µ—Ä–µ–≥—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∫–æ–º–∞–Ω–¥–Ω–∏–π –±—ñ–π —É —Ñ–∞–π–ª"); // ‚úÖ –†–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
        System.out.println("6. –í—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –±—ñ–π –∑—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ —Ñ–∞–π–ª—É");    // ‚úÖ –†–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
        System.out.println("7. –í–∏–π—Ç–∏ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏");
        System.out.print("–û–±–µ—Ä—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É: ");
    }

    private static void executeChoice(int choice) {
        switch (choice) {
            case 1:
                createDroid();
                break;
            case 2:
                showDroidList();
                break;
            case 3:
                // ‚úÖ –†–û–ó–ö–û–ú–ï–ù–¢–û–í–ê–ù–û: –¢–µ–ø–µ—Ä –≤–∏–∫–ª–∏–∫–∞—î–º–æ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π Fight1v1Manager
                Fight1v1Manager.startFight(droidList, scanner);
                break;
            case 4:
                // ... (–õ–æ–≥—ñ–∫–∞ –≤–∏–±–æ—Ä—É –∫–æ–º–∞–Ω–¥) ...
                List<Droid> currentTeam1 = FightTeamVsTeamManager.selectTeam(droidList, scanner, 1);
                if (currentTeam1 == null) break;
                List<Droid> currentTeam2 = FightTeamVsTeamManager.selectTeam(droidList, scanner, 2, currentTeam1);
                if (currentTeam2 == null) break;

                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ü—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –æ–ø—Ü—ñ—ó 5
                lastTeam1 = currentTeam1;
                lastTeam2 = currentTeam2;

                FightTeamVsTeamManager.startFight(currentTeam1, currentTeam2);
                break;

            case 5: // –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø
                if (lastTeam1.isEmpty() && lastTeam2.isEmpty()) {
                    System.out.println("‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–∏–π –±—ñ–π (–ö–æ–º–∞–Ω–¥–∞ 4), —â–æ–± –º–∞—Ç–∏ —â–æ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏.");
                } else {
                    // ‚úÖ –†–û–ó–ö–û–ú–ï–ù–¢–û–í–ê–ù–û: –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
                    BattleHistoryManager.saveBattle(lastTeam1, lastTeam2);
                }
                break;

            case 6: // –í–Ü–î–¢–í–û–†–ï–ù–ù–Ø
                // ‚úÖ –†–û–ó–ö–û–ú–ï–ù–¢–û–í–ê–ù–û: –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
                BattleHistoryManager.loadAndReplayBattle();
                break;

            case 7: // –í–ò–•–Ü–î
                System.out.println("–ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–≤–µ—Ä—à—É—î —Ä–æ–±–æ—Ç—É. –ë—É–≤–∞–π!");
                break;

            default:
                System.out.println("‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 7.");
        }
    }

    public static void showDroidList() {
        System.out.println(ConsoleColors.CYAN + "\n--- –°–ü–ò–°–û–ö –°–¢–í–û–†–ï–ù–ò–• –î–†–û–á–î–Ü–í (" + droidList.size() + ") ---" + ConsoleColors.RESET);
        if (droidList.isEmpty()) {
            System.out.println("–°–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π. –°—Ç–≤–æ—Ä—ñ—Ç—å –¥—Ä–æ—ó–¥—ñ–≤ (–ö–æ–º–∞–Ω–¥–∞ 1).");
            return;
        }

        for (int i = 0; i < droidList.size(); i++) {
            System.out.println("[" + (i + 1) + "] " + droidList.get(i).getStatusInfo());
        }
    }

    // ... (createDroid - –±–µ–∑ –∑–º—ñ–Ω) ...
    private static void createDroid() {
        System.out.println("\n--- –°–¢–í–û–†–ï–ù–ù–Ø –î–†–û–á–î–ê ---");
        System.out.println("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥—Ä–æ—ó–¥–∞:");
        System.out.println("  1. " + ConsoleColors.CYAN + "TankDroid (üõ°Ô∏è –ë—Ä–æ–Ω—è)" + ConsoleColors.RESET);
        System.out.println("  2. " + ConsoleColors.RED + "AttackerDroid (üí• –ö—Ä–∏—Ç)" + ConsoleColors.RESET);
        System.out.println("  3. " + ConsoleColors.GREEN + "HealerDroid (üíö –õ—ñ–∫—É–≤–∞–Ω–Ω—è)" + ConsoleColors.RESET);
        System.out.print("–í–∞—à –≤–∏–±—ñ—Ä: ");

        int typeChoice = -1;
        if (scanner.hasNextInt()) {
            typeChoice = scanner.nextInt();
        }
        scanner.nextLine();

        System.out.print("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –¥–ª—è –¥—Ä–æ—ó–¥–∞: ");
        String name = scanner.nextLine();

        Droid newDroid = null;

        switch (typeChoice) {
            case 1:
                newDroid = new TankDroid(name);
                break;
            case 2:
                newDroid = new AttackerDroid(name);
                break;
            case 3:
                newDroid = new HealerDroid(name);
                break;
            default:
                System.out.println("‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ç–∏–ø –¥—Ä–æ—ó–¥–∞.");
                return;
        }

        droidList.add(newDroid);
        System.out.println(ConsoleColors.BOLD + ConsoleColors.GREEN + "‚úÖ –î—Ä–æ—ó–¥ " + newDroid.getName() + " —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π!" + ConsoleColors.RESET);
    }
}